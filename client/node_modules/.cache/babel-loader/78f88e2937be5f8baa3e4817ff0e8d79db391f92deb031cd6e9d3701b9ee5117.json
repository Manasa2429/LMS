{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/Documents/vscode/mini/client/src/pages/GeneralDiscussions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralDiscussions = () => {\n  _s();\n  const [discussions, setDiscussions] = useState([]);\n  const [newDiscussion, setNewDiscussion] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [selectedDiscussion, setSelectedDiscussion] = useState(null);\n  const [newReply, setNewReply] = useState(\"\");\n  useEffect(() => {\n    fetchDiscussions();\n  }, []);\n  const fetchDiscussions = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/discussions\");\n      setDiscussions(res.data);\n    } catch (error) {\n      console.error(\"Error fetching discussions:\", error);\n    }\n  };\n  const handleCreateDiscussion = async () => {\n    if (!newDiscussion.title || !newDiscussion.content) {\n      return alert(\"Please enter all fields\");\n    }\n    try {\n      const userId = localStorage.getItem(\"userId\"); // Assuming userId is stored in localStorage\n\n      console.log(\"Sending data:\", {\n        ...newDiscussion,\n        author: userId,\n        category: \"General Discussions\"\n      });\n      await axios.post(\"http://localhost:5000/api/discussions\", {\n        ...newDiscussion,\n        author: userId,\n        // Pass a valid user ID\n        category: \"General Discussions\" // Send a required category\n      });\n      setNewDiscussion({\n        title: \"\",\n        content: \"\"\n      });\n      fetchDiscussions();\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating discussion:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n    }\n  };\n  const handleReply = async discussionId => {\n    if (!newReply) return alert(\"Enter a reply\");\n    try {\n      await axios.post(\"http://localhost:5000/api/replies\", {\n        content: newReply,\n        author: \"User123\",\n        discussion: discussionId\n      });\n      setNewReply(\"\");\n      fetchDiscussions();\n    } catch (error) {\n      console.error(\"Error adding reply:\", error);\n    }\n  };\n  const handleLike = async discussionId => {\n    try {\n      await axios.post(\"http://localhost:5000/api/likes\", {\n        user: \"User123\",\n        targetId: discussionId,\n        targetType: \"discussion\"\n      });\n      fetchDiscussions();\n    } catch (error) {\n      console.error(\"Error liking discussion:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"\\uD83D\\uDCAC General Discussions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Discussion Title\",\n        value: newDiscussion.title,\n        onChange: e => setNewDiscussion({\n          ...newDiscussion,\n          title: e.target.value\n        }),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Discussion Content\",\n        value: newDiscussion.content,\n        onChange: e => setNewDiscussion({\n          ...newDiscussion,\n          content: e.target.value\n        }),\n        style: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateDiscussion,\n        style: styles.button,\n        children: \"Start Discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.discussionsList,\n      children: discussions.map(discussion => {\n        var _discussion$likes, _discussion$replies;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.discussionCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: discussion.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: discussion.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.actions,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(discussion._id),\n              style: styles.likeButton,\n              children: [\"\\uD83D\\uDC4D \", ((_discussion$likes = discussion.likes) === null || _discussion$likes === void 0 ? void 0 : _discussion$likes.length) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedDiscussion(discussion._id),\n              style: styles.replyButton,\n              children: \"\\uD83D\\uDCAC Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), selectedDiscussion === discussion._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.replySection,\n            children: [(_discussion$replies = discussion.replies) === null || _discussion$replies === void 0 ? void 0 : _discussion$replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.reply,\n              children: reply.content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Write a reply...\",\n              value: newReply,\n              onChange: e => setNewReply(e.target.value),\n              style: styles.textarea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReply(discussion._id),\n              style: styles.button,\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, discussion._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n// Inline CSS Styles\n_s(GeneralDiscussions, \"JHMPKVPKOqEpMOXh0L4xkZ8/9TQ=\");\n_c = GeneralDiscussions;\nconst styles = {\n  container: {\n    marginLeft: \"250px\",\n    padding: \"30px\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f8f9fa\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: \"24px\",\n    fontWeight: \"bold\",\n    color: \"#003c8f\"\n  },\n  form: {\n    background: \"#ffffff\",\n    padding: \"20px\",\n    borderRadius: \"12px\",\n    boxShadow: \"0px 6px 12px rgba(0, 0, 0, 0.15)\",\n    width: \"600px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    fontSize: \"16px\"\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"10px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    fontSize: \"16px\"\n  },\n  button: {\n    padding: \"10px\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    background: \"#003c8f\",\n    color: \"white\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  },\n  buttonHover: {\n    background: \"#002866\"\n  },\n  discussionsList: {\n    width: \"600px\",\n    marginTop: \"20px\"\n  },\n  discussionCard: {\n    background: \"#ffffff\",\n    padding: \"20px\",\n    borderRadius: \"12px\",\n    boxShadow: \"0px 6px 12px rgba(0, 0, 0, 0.15)\",\n    marginBottom: \"15px\"\n  },\n  actions: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginTop: \"10px\"\n  },\n  likeButton: {\n    padding: \"6px 10px\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\",\n    background: \"#28a745\",\n    color: \"white\"\n  },\n  replyButton: {\n    padding: \"6px 10px\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\",\n    background: \"#003c8f\",\n    color: \"white\"\n  },\n  replySection: {\n    marginTop: \"10px\",\n    paddingTop: \"10px\",\n    borderTop: \"1px solid #ddd\"\n  },\n  reply: {\n    background: \"#f8f9fa\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    marginTop: \"5px\"\n  }\n};\nexport default GeneralDiscussions;\nvar _c;\n$RefreshReg$(_c, \"GeneralDiscussions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GeneralDiscussions","_s","discussions","setDiscussions","newDiscussion","setNewDiscussion","title","content","selectedDiscussion","setSelectedDiscussion","newReply","setNewReply","fetchDiscussions","res","get","data","error","console","handleCreateDiscussion","alert","userId","localStorage","getItem","log","author","category","post","_error$response","response","handleReply","discussionId","discussion","handleLike","user","targetId","targetType","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","form","type","placeholder","value","onChange","e","target","input","textarea","onClick","button","discussionsList","map","_discussion$likes","_discussion$replies","discussionCard","actions","_id","likeButton","likes","length","replyButton","replySection","replies","reply","index","_c","marginLeft","padding","minHeight","backgroundColor","display","flexDirection","alignItems","fontSize","fontWeight","color","background","borderRadius","boxShadow","width","gap","border","cursor","buttonHover","marginTop","marginBottom","paddingTop","borderTop","$RefreshReg$"],"sources":["/home/apiiit123/Documents/vscode/mini/client/src/pages/GeneralDiscussions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst GeneralDiscussions = () => {\n    const [discussions, setDiscussions] = useState([]);\n    const [newDiscussion, setNewDiscussion] = useState({ title: \"\", content: \"\" });\n    const [selectedDiscussion, setSelectedDiscussion] = useState(null);\n    const [newReply, setNewReply] = useState(\"\");\n\n    useEffect(() => {\n        fetchDiscussions();\n    }, []);\n\n    const fetchDiscussions = async () => {\n        try {\n            const res = await axios.get(\"http://localhost:5000/api/discussions\");\n            setDiscussions(res.data);\n        } catch (error) {\n            console.error(\"Error fetching discussions:\", error);\n        }\n    };\n\n    const handleCreateDiscussion = async () => {\n        if (!newDiscussion.title || !newDiscussion.content) {\n            return alert(\"Please enter all fields\");\n        }\n    \n        try {\n            const userId = localStorage.getItem(\"userId\");  // Assuming userId is stored in localStorage\n    \n            console.log(\"Sending data:\", { ...newDiscussion, author: userId, category: \"General Discussions\" });\n    \n            await axios.post(\"http://localhost:5000/api/discussions\", { \n                ...newDiscussion, \n                author: userId,   // Pass a valid user ID\n                category: \"General Discussions\",  // Send a required category\n            });\n    \n            setNewDiscussion({ title: \"\", content: \"\" });\n            fetchDiscussions();\n        } catch (error) {\n            console.error(\"Error creating discussion:\", error.response?.data || error);\n        }\n    };\n    \n    \n\n    const handleReply = async (discussionId) => {\n        if (!newReply) return alert(\"Enter a reply\");\n        try {\n            await axios.post(\"http://localhost:5000/api/replies\", { content: newReply, author: \"User123\", discussion: discussionId });\n            setNewReply(\"\");\n            fetchDiscussions();\n        } catch (error) {\n            console.error(\"Error adding reply:\", error);\n        }\n    };\n\n    const handleLike = async (discussionId) => {\n        try {\n            await axios.post(\"http://localhost:5000/api/likes\", { user: \"User123\", targetId: discussionId, targetType: \"discussion\" });\n            fetchDiscussions();\n        } catch (error) {\n            console.error(\"Error liking discussion:\", error);\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <h1 style={styles.title}>💬 General Discussions</h1>\n\n            {/* Create New Discussion */}\n            <div style={styles.form}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Discussion Title\"\n                    value={newDiscussion.title}\n                    onChange={(e) => setNewDiscussion({ ...newDiscussion, title: e.target.value })}\n                    style={styles.input}\n                />\n                <textarea\n                    placeholder=\"Discussion Content\"\n                    value={newDiscussion.content}\n                    onChange={(e) => setNewDiscussion({ ...newDiscussion, content: e.target.value })}\n                    style={styles.textarea}\n                />\n                <button onClick={handleCreateDiscussion} style={styles.button}>Start Discussion</button>\n            </div>\n\n            {/* Display Discussions */}\n            <div style={styles.discussionsList}>\n                {discussions.map((discussion) => (\n                    <div key={discussion._id} style={styles.discussionCard}>\n                        <h3>{discussion.title}</h3>\n                        <p>{discussion.content}</p>\n                        <div style={styles.actions}>\n                            <button onClick={() => handleLike(discussion._id)} style={styles.likeButton}>👍 {discussion.likes?.length || 0}</button>\n                            <button onClick={() => setSelectedDiscussion(discussion._id)} style={styles.replyButton}>💬 Reply</button>\n                        </div>\n\n                        {/* Replies Section */}\n                        {selectedDiscussion === discussion._id && (\n                            <div style={styles.replySection}>\n                                {discussion.replies?.map((reply, index) => (\n                                    <p key={index} style={styles.reply}>{reply.content}</p>\n                                ))}\n                                <textarea\n                                    placeholder=\"Write a reply...\"\n                                    value={newReply}\n                                    onChange={(e) => setNewReply(e.target.value)}\n                                    style={styles.textarea}\n                                />\n                                <button onClick={() => handleReply(discussion._id)} style={styles.button}>Reply</button>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n// Inline CSS Styles\nconst styles = {\n    container: {\n        marginLeft: \"250px\",\n        padding: \"30px\",\n        minHeight: \"100vh\",\n        backgroundColor: \"#f8f9fa\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    title: {\n        fontSize: \"24px\",\n        fontWeight: \"bold\",\n        color: \"#003c8f\",\n        \n    },\n    form: {\n        background: \"#ffffff\",\n        padding: \"20px\",\n        borderRadius: \"12px\",\n        boxShadow: \"0px 6px 12px rgba(0, 0, 0, 0.15)\",\n        width: \"600px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n    },\n    input: {\n        width: \"100%\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        fontSize: \"16px\",\n    },\n    textarea: {\n        width: \"100%\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        fontSize: \"16px\",\n    },\n    button: {\n        padding: \"10px\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        background: \"#003c8f\",\n        color: \"white\",\n        cursor: \"pointer\",\n        fontSize: \"16px\",\n    },\n    buttonHover: {\n        background: \"#002866\",\n    },\n    discussionsList: {\n        width: \"600px\",\n        marginTop: \"20px\",\n    },\n    discussionCard: {\n        background: \"#ffffff\",\n        padding: \"20px\",\n        borderRadius: \"12px\",\n        boxShadow: \"0px 6px 12px rgba(0, 0, 0, 0.15)\",\n        marginBottom: \"15px\",\n    },\n    actions: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginTop: \"10px\",\n    },\n    likeButton: {\n        padding: \"6px 10px\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        fontSize: \"14px\",\n        cursor: \"pointer\",\n        background: \"#28a745\",\n        color: \"white\",\n    },\n    replyButton: {\n        padding: \"6px 10px\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        fontSize: \"14px\",\n        cursor: \"pointer\",\n        background: \"#003c8f\",\n        color: \"white\",\n    },\n    replySection: {\n        marginTop: \"10px\",\n        paddingTop: \"10px\",\n        borderTop: \"1px solid #ddd\",\n    },\n    reply: {\n        background: \"#f8f9fa\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        marginTop: \"5px\",\n    }\n};\n\nexport default GeneralDiscussions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}